8200public nz.co.LanguagePerfect.Services.Alerts._TypeExposer ExposeTypes()
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> CreateEarnPointsTask(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, int TargetPoints, short TargetKnowledgeSet)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> CreateLearnContentTask(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, int TargetStarLevel, short TargetKnowledgeSet, bool RequireLearningInAllSelectedActivitySubtypes)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask2(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> CreateEarnPointsTask2(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TargetPoints, short TargetKnowledgeSet)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> CreateEarnPointsTask3(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TargetPoints, short TargetKnowledgeSet, bool notifyTeacher)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> CreateEarnPointsTask4(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.EarnPointsTaskCreationDetails creationDetails)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> CreateLearnContentTask2(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TargetStarLevel, short TargetKnowledgeSet, bool RequireLearningInAllSelectedActivitySubtypes)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> CreateLearnContentTask3(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TargetStarLevel, short TargetKnowledgeSet, bool RequireLearningInAllSelectedActivitySubtypes, bool notifyTeacher)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> CreateLearnContentTask4(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.LearnContentTaskCreationDetails creationDetails)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask3(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle, short AssessorType)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask4(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle, short AssessorType, bool RequiresAccessCode, string AccessCode)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask5(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle, short AssessorType, bool RequiresAccessCode, string AccessCode, bool NotifyTeacher)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> CreateAssessmentTask6(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, short TimezoneOffset, short brand, bool emailStudents, bool emailTeachers, int TestID, bool ownsTest, int ContainingModuleID, short NumberOfAttemptsAllowed, short GradeAggregationStyle, short AssessorType, bool RequiresAccessCode, string AccessCode, short StudentResultViewingPermissions, short SecurityLevel, int OverrideTimeAllowed, int OverrideTimeAllowedForDisconnections, bool NotifyTeacher)
public nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject CreateAssessmentTask7(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.AssessmentTaskCreationDetails creationDetails)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskReturnObject> CreateCompleteActivityTask(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, short TimezoneOffset, short Brand, bool emailStudents, bool emailTeachers, bool includePreviousAttempts, DateTime previousAttemptsCutoff)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskReturnObject> CreateCompleteActivityTask2(long sessionID, string Name, string Description, DateTime StartDate, DateTime DueDate, DateTime FinalSubmissionDate, bool AllowLateSubmissions, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, short TimezoneOffset, short Brand, bool emailStudents, bool emailTeachers, bool includePreviousAttempts, DateTime previousAttemptsCutoff, bool notifyTeacher)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskReturnObject> CreateCompleteActivityTask3(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.CompleteActivityTaskCreationDetails creationDetails)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> ModifyAssessmentTask(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.AssessmentTask newData)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.StringReturnObject> UpdateAssessmentTaskAccessCode(long sessionID, int taskID, string newAccessCode)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> UpdateAssessmentTaskResultPublicationStatus(long sessionID, int taskID, short newStatus)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> ModifyEarnPointsTask(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.EarnPointsTask newData)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> ModifyLearnContentTask(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.LearnContentTask newData)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskReturnObject> ModifyCompleteActivityTask(long sessionID, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.CompleteActivityTask newData)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> DeleteTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> DeleteAssessmentTask(long sessionID, int TaskID, bool DeleteUnderlyingTest)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskReturnObject> ReopenEarnPointsTask(long sessionID, int taskID, DateTime newFinalSubmissionDate)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskReturnObject> ReopenLearnContentTask(long sessionID, int taskID, DateTime newFinalSubmissionDate)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskReturnObject> ReopenCompleteActivityTask(long sessionID, int taskID, DateTime newFinalSubmissionDate)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskReturnObject> ReopenAssessmentTask(long sessionID, int taskID, DateTime newFinalSubmissionDate, bool markSubsequentAttemptsAsOverdue)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> SendImmediateReminderEmailToStudentsAboutTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetTasksOwnedByUser(long sessionID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetTasksOwnedByUser2(long sessionID, bool excludeOldTasks)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetTasksForClass(long sessionID, int ClassID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetTasksForClass2(long sessionID, int ClassID, bool excludeOldTasks)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetTasksForClasses(long sessionID, List<int> ClassIDs, DateTime OldestExpiryDate)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.ClassTaskCountReturnObject> GetTaskCountsForClasses(long sessionID, List<int> classIDs, DateTime oldestExpiryDate, bool limitToAssessments)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TypedTasksReturnObject> GetSpecificTasks(long sessionID, List<int> TaskIDs)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.MultipleTaskProgressOverviewsReturnObject> GetTaskProgressOverviewForMultipleTasks(long sessionID, List<int> taskIDs, bool IncludeLateSubmissions)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskProgressReportReturnObject> GetProgressReportInfoForLearnContentTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.LearnContentTaskProgressReportReturnObject> GetProgressReportInfoForLearnContentTask2(long sessionID, int TaskID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskProgressReportReturnObject> GetProgressReportInfoForAssessmentTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskProgressReportReturnObject> GetProgressReportInfoForAssessmentTask2(long sessionID, int TaskID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskProgressReportReturnObject> GetProgressReportInfoForEarnPointsTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.EarnPointsTaskProgressReportReturnObject> GetProgressReportInfoForEarnPointsTask2(long sessionID, int TaskID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskProgressReportReturnObject> GetProgressReportInfoForCompleteActivityTask(long sessionID, int TaskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskProgressReportReturnObject> GetProgressReportInfoForCompleteActivityTask2(long sessionID, int TaskID, List<int> FilteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportReturnObject> GetSmartLessonProgressReportForCompleteActivityTask(long sessionID, int TaskID, int ActivityID)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportReturnObject> GetSmartLessonProgressReportForCompleteActivityTask2(long sessionID, int TaskID, int ActivityID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.StatsUpdatedReturnObject> CheckWhetherSmartLessonReportHasNewData(long sessionID, int TaskID, int? ActivityID, DateTime LastKnownUpdate, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportReturnObject> GetSmartLessonProgressReportForCompleteActivityTaskForSpecificUser(long sessionID, int TaskID, int ActivityID, int UserID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.StatsUpdatedReturnObject> CheckWhetherSmartLessonReportForSpecificUserHasNewData(long sessionID, int TaskID, int ActivityID, int UserID, DateTime LastKnownUpdate)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportCommonMistakesReturnObject> GetCommonMistakesForCompleteActivityTask(long sessionID, int taskID, int activityID, int sectionID, int contentID)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportCommonMistakesReturnObject> GetCommonMistakesForCompleteActivityTask2(long sessionID, int taskID, int activityID, int sectionID, int contentID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportCommonMistakesReturnObject> GetCommonMistakesForCompleteActivityTaskForSpecificUser(long sessionID, int taskID, int userID, int activityID, int sectionID, int contentID)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportUserAnswersReturnObject> GetUserAnswersForCompleteActivityTask(long sessionID, int taskID, int activityID, int sectionID, int contentID)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportUserAnswersReturnObject> GetUserAnswersForCompleteActivityTask2(long sessionID, int taskID, int activityID, int sectionID, int contentID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportUserAnswersReturnObject> GetUserAnswersForCompleteActivityTask3(long sessionID, int taskID, int activityID, int sectionID, int contentID, bool mostRecentAnswerOnly, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportUserAnswersReturnObject> GetUserAnswersForCompleteActivityTaskForSpecificUser(long sessionID, int taskID, int userID, int activityID, int sectionID, int contentID)
public Task<nz.co.LanguagePerfect.Services.Activities.ReturnObjects.SmartLessonProgressReportUserAnswersReturnObject> GetUserAnswersForCompleteActivityTaskForSpecificUser2(long sessionID, int taskID, int userID, int activityID, int sectionID, int contentID, bool mostRecentAnswerOnly)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.CompleteActivityTaskAnswerReviewsReportReturnObject> GetAnswerReviewsReportForCompleteActivityTask(long sessionID, int TaskID, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.BooleanReturnObject> DoesTaskHaveSmartLessonExtendedResponseSections(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> SubmitSmartLessonAnswerReview(long sessionID, nz.co.LanguagePerfect.Services.Activities.BusinessObjects.AnswerReview review)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.UserTaskLiveUserProgressReturnObject> GetUserTaskLiveUserProgressForCompleteActivityTask(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.UserTaskLiveUserProgressReturnObject> GetUserTaskLiveUserProgressForEarnPointsTask(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.UserTaskLiveUserProgressReturnObject> GetUserTaskLiveUserProgressForLearnContentTask(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.MultipleTasksSummaryReportReturnObject> GetMultipleHomeworkTasksSummaryReportForClasses(long sessionID, List<int> classIDs, DateTime periodStartDate, DateTime periodEndDate, bool includeHomework, bool includeAssessments, bool includeTasksAssignedToTargetStudents)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForLearnContentTask(long sessionID, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, int TargetStarLevel, int TargetKnowledgeSet, bool RequireLearningInAllSelectedActivitySubtypes)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForEarnPointsTask(long sessionID, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetActivityFilter ActivityFilter, int TargetScore)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForCompleteActivityTask(long sessionID, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForCompleteActivityTask2(long sessionID, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetUserFilter UserFilter, nz.co.LanguagePerfect.Services.Stats.DataSets.BusinessObjects.DataSetContentFilter ContentFilter, bool filterSections, List<nz.co.LanguagePerfect.Services.Activities.BusinessObjects.SmartLessonSectionFilter> sectionFilters)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestDataReturnObject> GetTestForAssessmentTask(long sessionID, int assessmentTaskID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestDataReturnObject> GetTest(long sessionID, int testID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestDataReturnObject> CreateTest(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.Test newTest, int schoolToShareWith)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestDataReturnObject> ModifyTest(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.Test test)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> DeleteTest(long sessionID, int testID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestTemplateReturnObject> GetAllAssessmentTemplates(long sessionID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForAssessmentTaskDataSelection(long sessionID, int TargetListID, int TranslationDirection)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskTimeEstimateReturnObject> EstimateTimeForAssessmentTaskDataSelection2(long sessionID, List<int> TargetListIDs, int TranslationDirection)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.IntReturnObject> EstimateMaxNumberOfQuestionsForQuickTestContentSelection(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.QuickTestParameters parameters)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestAttemptMarkingStatusesReturnObject> GetTestAttemptMarkingData(long sessionID, int testID, int assessmentContextID, int attemptID, bool includeCompletelyMarkedAttempts)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestAttemptMarkingStatusesReturnObject> GetAssessmentTaskAttemptsMarkingData(long sessionID, int taskID, bool includeCompletelyMarkedAttempts)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> SaveTeacherQuestionGradesForAttempt(long sessionID, int attemptID, DateTime version, List<nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AttemptGradingStepResult> grades)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> FinaliseTeacherQuestionGradesForAttempt(long sessionID, int attemptID, DateTime version)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> FinaliseTeacherAggregatedGradeForAttempt(long sessionID, int attemptID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AttemptGradingAggregateResult grade)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> FlagSectionMarkingStatusAsComplete(long sessionID, int attemptID, int sectionID)
public Task<nz.co.LanguagePerfect.Services.UserTaskMonitoring.ReturnObjects.EventsReturnObject> GetTaskMonitoringEvents(nz.co.LanguagePerfect.Services.UserTaskMonitoring.RequestModels.GetEventsRequestModel request)
public Task<nz.co.LanguagePerfect.Services.UserTaskMonitoring.ReturnObjects.StatusReturnObject> GetTaskMonitoringStatuses(nz.co.LanguagePerfect.Services.UserTaskMonitoring.RequestModels.GetStatusRequestModel request)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskMonitoringDataReturnObject> GetCurrentAssessmentAttemptDetailsForAssessmentTasks(long sessionID, List<nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentTaskTeacherMonitoringRequest> requests)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.AssessmentTaskSingleUserMonitoringDataReturnObject> GetCurrentAssessmentAttemptDetailsForAssessmentTaskForUser(long sessionID, int taskID, int userID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.QuickTestReturnObject> CreateQuickTest(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.QuickTestParameters newTest, int schoolToShareWith)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.QuickTestReturnObject> ModifyQuickTest(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.QuickTestParameters test)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.QuickTestReturnObject> GetQuickTestForAssessmentTask(long sessionID, int assessmentTaskID)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.BoolReturnObject> DoesTestHaveAnyAttempts(long sessionID, int testID)
public void ____type_exposers(nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.ScheduledNotification a, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.MarkingScheduleGradeRule b, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.MarkingScheduleScoreRule c, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.TestQuestionGroup d, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.MultipleTasksSummaryReportUserLearningTaskProgress e, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.MultipleTasksSummaryReportUserSmartLessonTaskProgress f, nz.co.LanguagePerfect.Services.UserTasks.BusinessObjects.MultipleTasksSummaryReportUserAssessmentTaskProgress g)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentResultSummaryReturnObject> GetUserAssessmentResultSummaries(long sessionID, int userID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentResultSummaryReturnObject> GetUserAssessmentResultSummariesWithFilter(long sessionID, int userID, int? testID, int? assessmentContextID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentReportReturnObject> GetAssessmentTaskReportingData(long sessionID, int assessmentTaskID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentReportReturnObject> GetAssessmentTaskReportingData2(long sessionID, int assessmentTaskID, bool excludeTeachers, List<int> filteredClassIDs)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentReportReturnObject> GetUserAssessmentReportingData(long sessionID, int userID, int testID, int assessmentContextID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AnalysisGroupsReturnObject> GetStudentAnalysisGroups(long sessionID, int userID, int testID, int assessmentContextID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.GradingMethodsReturnObject> GetGradingMethods(long sessionID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.GradingMethodReturnObject> GetGradingMethod(long sessionID, int id)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.BooleanReturnObject> HasTestBeenAttempted(long sessionID, int testID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.MarkingCheckOutReturnObject> CheckOutNextAssessmentAttemptForMarking(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter, int lastAttemptID, string lastSequenceString)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.MarkingCheckOutReturnObject> CheckOutSpecificAssessmentAttemptForMarking(long sessionID, int attemptID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter, bool overrideExistingCheckout)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestAttemptMarkingStatusReturnObject> GetSpecificAssessmentAttempt(long sessionID, int attemptID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> CheckBackInSpecificAssessmentAttemptForMarking(long sessionID, int attemptID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.MarkingProgressReturnObject> GetMarkingProgressStatus(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentSectionVariantInfoReturnObject> GetAssessmentSectionVariantsForMarking(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.MarkerHistoryReturnObject> GetMarkerHistory(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter, int markerUserID, int offset, int pageSize)
public Task<nz.co.LanguagePerfect.Services.Users.ReturnObjects.BasicUserDetailsGroupReturnObject> GetTestMarkers(long sessionID, nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AssessmentMarkingFilter filter)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.AssessmentMarkingSetWithPrivilagesReturnObject> GetMarkingSetWithPrivilages(long sessionID, int markingSetID)
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.MarkerCheckoutRenewalReturnObject> UpdateMarkingCheckoutLastUsed(long sessionID, int attemptID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.RemediationTaskCreationReturnObject> AssignAppropriateRemediationTasksToAllUsersInAssessmentTask(long sessionID, int assessmentTaskID, DateTime DueDate, int maxTimeToAssign, int maxSmartLessonsToAssign, DateTime activityLastAttemptedCutoff, bool emailStudents, bool emailTeacherReport)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.RemediationTaskCreationReturnObject> AssignAppropriateRemediationTasksToAllUsersInAssessmentTask2(long sessionID, int assessmentTaskID, bool filterRecommendations, List<nz.co.LanguagePerfect.Services.Assessments2.BusinessObjects.AnalysisGroupRecommendationFilterItem> filteredRecommendations, bool filterClasses, List<int> filteredClassIDs, DateTime DueDate, int maxTimeToAssign, int maxSmartLessonsToAssign, DateTime activityLastAttemptedCutoff, bool emailStudents, bool emailParents, bool emailTeacherReport, bool notifyTeacher)
public Task<nz.co.LanguagePerfect.Services.BaseClasses.ReturnObjects.ReturnObject> MakeAttemptEditable(long sessionID, int attemptID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.DemoTasksReturnObject> GetDemoTaskDetails()
public Task<nz.co.LanguagePerfect.Services.Assessments2.ReturnObjects.TestQuestionSelectionReturnObject> GetSampleQuestionSetForAssessment(long sessionID, int assessmentID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskUserDetailsReturnObject> GetUserDetailsForTask(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskUserDetailsReturnObject> GetUserDetailsForTask2(long sessionID, int taskID, bool restrictToStudents)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskOnlineUsersReturnObject> GetUserOnlineStatusForTask(long sessionID, int taskID)
public Task<nz.co.LanguagePerfect.Services.UserTasks.ReturnObjects.TaskOnlineUsersReturnObject> GetUserOnlineStatusForTask2(long sessionID, int taskID, bool restrictToStudents)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.PDFGenerationStatusReturnObject> ExportPDFOfAssessmentTaskAttempt(long sessionID, int taskID, int attemptID, bool notifyWhenDone)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.FileUploadReturnObject> ExportSpreadsheetOfAssessmentTaskAttempt(long sessionID, int taskID, int attemptID)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.FileUploadReturnObject> ExportSpreadsheetOfAllAttemptsForAssessmentTask(long sessionID, int taskID, List<int> targetClassIDs)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.PDFGenerationStatusReturnObject> ExportPDFOfAssessmentAttempt(long sessionID, int attemptID, bool notifyWhenDone)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.PDFBatchStatusReturnObject> ExportPDFsOfAllAttemptsForAssessmentTask(long sessionID, int taskID, List<int> targetClassIDs, bool notifyWhenDone)
public Task<nz.co.LanguagePerfect.Services.Files.ReturnObjects.PDFGenerationStatusReturnObject> ExportPDFPreviewOfAssessment(long sessionID, int testID, bool enforceNewAttempt, bool notifyWhenDone)
public Task<nz.co.LanguagePerfect.Services.ReviewQuiz.ReturnObjects.ReviewQuizAvailableQuestionsReturnObject> GetReviewQuizValidQuestions(long sessionID, int activityID, short translationDirection)
public Task<nz.co.LanguagePerfect.Services.ReviewQuiz.ReturnObjects.ReviewQuizValidTranslationDirectionsReturnObject> GetReviewQuizValidTranslationDirections(long sessionID, int activityID, List<short> translationDirections)
public void .ctor()
1137
